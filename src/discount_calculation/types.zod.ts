/**
 * Warning: This file is generated by the context mapper hooks generator.
 * Any changes to this file will be lost.
 */
import {z} from 'zod';
import {metadataSchema, timeRangeSchema, monetaryAmountSchema} from '../types.zod';

export const billingReasonSchema = z.union([
  z.literal('MANUAL'),
  z.literal('SUBSCRIPTION_CREATE'),
  z.literal('SUBSCRIPTION_CYCLE'),
  z.literal('SUBSCRIPTION_CANCEL'),
  z.literal('SUBSCRIPTION_THRESHOLD'),
  z.literal('SUBSCRIPTION_TRIAL_ENDED'),
  z.literal('SUBSCRIPTION_UPDATE'),
  z.literal('UPCOMING'),
]);
export const recurringPriceIntervalSchema = z.union([
  z.literal('DAY'),
  z.literal('WEEK'),
  z.literal('MONTH'),
  z.literal('YEAR'),
]);
export const usageTypeSchema = z.union([
  z.literal('LICENSED'),
  z.literal('METERED'),
]);
export const pricingSchemeSchema = z.union([
  z.literal('PER_UNIT'),
  z.literal('TIERED'),
]);
export const pricingTierModeSchema = z.union([
  z.literal('GRADUATED'),
  z.literal('VOLUME'),
]);

export const customerSchema = z.object({
  id: z.string(),
  metadata: metadataSchema,
});
export const billingCycleAnchorConfigSchema = z.object({
  month: z.number(),
  day_of_month: z.number(),
  hour: z.number(),
  minute: z.number(),
  second: z.number(),
});
export const subscriptionSchema = z.object({
  id: z.string(),
  billing_cycle_anchor: z.number(),
  billing_cycle_anchor_config: billingCycleAnchorConfigSchema,
  billing_period: timeRangeSchema,
  metadata: metadataSchema,
});
export const productSchema = z.object({
  id: z.string(),
  name: z.string(),
  metadata: metadataSchema,
});
export const recurringPriceSchema = z.object({
  interval: recurringPriceIntervalSchema,
  interval_count: z.number(),
  usage_type: usageTypeSchema.optional(),
  meter: z.string().optional(),
});
export const priceTierSchema = z.object({
  flat_amount: z.number().optional(),
  unit_amount: z.number().optional(),
  up_to: z.number().optional(),
});
export const priceSchema = z.object({
  id: z.string(),
  product: productSchema,
  recurring: recurringPriceSchema,
  billing_scheme: pricingSchemeSchema,
  tiers: z.array(priceTierSchema),
  tiers_mode: pricingTierModeSchema.optional(),
  metadata: metadataSchema,
});
export const discountableLineItemSchema = z.object({
  subtotal: monetaryAmountSchema,
  is_free_trial: z.boolean(),
  is_recurring: z.boolean(),
  price_id: z.string().optional(),
  quantity: z.number().optional(),
  unit_amount: monetaryAmountSchema.optional(),
  period: timeRangeSchema,
  price: priceSchema.optional(),
});
export const discountableItemSchema = z.object({
  line_items: z.array(discountableLineItemSchema),
  gross_amount: monetaryAmountSchema,
  customer: customerSchema.optional(),
  billing_reason: billingReasonSchema.optional(),
  subscription: subscriptionSchema.optional(),
});
export const discountSchema = z.object({
  amount: monetaryAmountSchema,
});
export const discountResultSchema = z.object({
  discount: discountSchema,
});
